version: "3.8"

services:
  ftp-server:
    image: zhabba/pure-ftpd-arm64 # NOTE: this is a custom image for arm64, the original image is stilliard/pure-ftpd (amd64)
    container_name: pure-ftpd
    ports:
      - "21:21"
      - "30000-30009:30000-30009" # for passive mode
    volumes:
      - "./ftp/data:/home/admin/"
      - "./ftp/passwd:/etc/pure-ftpd/passwd"
    # uncomment for ssl/tls, see https://github.com/stilliard/docker-pure-ftpd#tls
    #      - "/folder_on_disk/ssl:/etc/ssl/private/"
    # or ssl/tls with Let's Encrypt (cert and key as two files)
    #      - "/etc/letsencrypt/live/<your_server>/cert.pem:/etc/ssl/private/pure-ftpd-cert.pem"
    #      - "/etc/letsencrypt/live/<your_server>/privkey.pem:/etc/ssl/private/pure-ftpd-key.pem"
    environment:
      PUBLICHOST: "localhost"
      FTP_USER_NAME: admin
      FTP_USER_PASS: change_me
      FTP_USER_HOME: /home/admin
    # also for ssl/tls:
    #      ADDED_FLAGS: "--tls=2"
    restart: always

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    #ports:
      #- "8081:80"
    environment:
      - PMA_ARBITRARY=1
      - MYSQL_ROOT_PASSWORD=your_secure_root_password
      - PMA_HOST=mysql_db
      - PMA_PORT=8081
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.web.elemento.cloud`)"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=8081"
    networks:
      - net
    depends_on:
      - mysql_db
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  app:
    build: ./php_fpm
    container_name: phpfpm_app
    restart: always
    working_dir: /var/www/html/
    #ports:
      #- "9000:9000"
    volumes:
      - ../src:/var/www/html/
    networks:
      - net
    depends_on:
      - mysql_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`app.web.elemento.cloud`)"
      - "traefik.http.services.app.loadbalancer.server.port=9000"

  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: your_secure_root_password
      MYSQL_DATABASE: your_database_name
      MYSQL_USER: your_database_user
      MYSQL_PASSWORD: your_database_password
    volumes:
      - mysql_data:/var/lib/mysql
    expose:
      - "3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    networks:
      - net

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    #ports:
      #- "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homepage.rule=Host(`homepage.web.elemento.cloud`)"
      - "traefik.http.services.homepage.loadbalancer.server.port=3000"
    volumes:
      - ./homepage/config:/app/config 
      - /var/run/docker.sock:/var/run/docker.sock 
    networks:
      - net

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - "9443:9443"
    #labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.portainer.rule=Host(`portainer.web.elemento.cloud`)"
      #- "traefik.http.services.portainer.loadbalancer.server.port=9443"
    volumes:
      - data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - net

  crontab-ui:
    container_name: crontab-ui
    build: .
    image: alseambusher/crontab-ui
    network_mode: bridge
    #ports:
      #- "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.crontab.rule=Host(`crontab.web.elemento.cloud`)"
      - "traefik.http.services.crontab.loadbalancer.server.port=8000"

  traefik:
    container_name: traefik
    image: traefik:v2.11
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - ../src:/var/www/html/
    networks:
      - net
    restart: unless-stopped

  whoami:
    container_name: whoami
    image: traefik/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.web.elemento.cloud`)"
    networks:
      - net

  swag:
    container_name: swag
    image: lscr.io/linuxserver/swag:latest
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - URL=yourdomain.url
      - VALIDATION=http
      - SUBDOMAINS=www,
      - CERTPROVIDER=
      - DNSPLUGIN=cloudflare
      - PROPAGATION=
      - EMAIL=
      - ONLY_SUBDOMAINS=false
      - EXTRA_DOMAINS=
      - STAGING=false
    volumes:
      - config:/config
    #ports:
      #- "443:443"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.swag.rule=Host(`swag.web.elemento.cloud`)"
    restart: unless-stopped
    networks:
      - net

volumes:
  mysql_data:
    driver: local
  data:
    driver: local
  config:
    driver: local

networks:
  net:
    driver: bridge